apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "schedule.fullname" . }}
  labels:
    {{- include "schedule.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "schedule.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "schedule.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "schedule.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            {{- range .Values.envmap }}
            - name: {{ .name }}
              {{- if .value -}}
              {{ indent 14 ""}}
              value: {{ .value  }}
              {{- end }}
              {{- with .valueFrom }}
              valueFrom:
                {{- toYaml . | nindent 16 }}
              {{- end }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /liveness
              port: http
          readinessProbe:
            httpGet:
              path: /hc
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
              - name: "secrets-{{ include "schedule.fullname" . }}-inline"
                mountPath: "/mnt/secrets-store"
                readOnly: true
      volumes:
        - name: "secrets-{{ include "schedule.fullname" . }}-inline"
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.secrets.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
