# This is a SecretProviderClass example using user-assigned identity to access your key vault
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: {{ .Values.secrets.name }}
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true" # Set to true for using managed identity
    userAssignedIdentityID: {{ .Values.secrets.identity }} # Set the clientID of the user-assigned managed identity to use
    keyvaultName: {{ .Values.secrets.keyvaultName }} # Set to the name of your key vault
    objects: |
      array:
        - |
          objectName: ConnectionString--ScheduleDb
          objectType: secret
        - |
          objectName: ConnectionString--StorageAccount--Blob
          objectType: secret
    tenantId: {{ .Values.secrets.tenantId }} # The tenant ID of the key vault
  secretObjects:
    - secretName: {{ .Values.secrets.name }}
      data:
        - key: ConnectionString--ScheduleDb
          objectName: ConnectionString--ScheduleDb
        - key: ConnectionString--StorageAccount--Blob
          objectName: ConnectionString--StorageAccount--Blob
      type: Opaque
